#!/bin/bash

CURRENT_PATH=$(cd `dirname $0/`;pwd)

CONF_PATH=$CURRENT_PATH/_conf
CONF_CHARTS_PATH=$CURRENT_PATH/1-conf

passwd=$(< /dev/urandom tr -dc "a-zA-Z0-9" | head -c 10; echo)
jwt_secret=$(uuidgen)

check_passwd=$(grep 'ES_SUPER_PASSWORD=""' $CONF_PATH/secret-service.env)
if [ ! -z $check_passwd ]; then
	sed -i "s|^ES_SUPER_PASSWORD=.*|ES_SUPER_PASSWORD=${passwd}|g"      $CONF_PATH/secret-service.env
	sed -i "s|^ES_PASSWORD=.*|ES_PASSWORD=${passwd}|g"                  $CONF_PATH/secret-service.env
	sed -i "s|^ETCD_PASSWORD=.*|ETCD_PASSWORD=${passwd}|g"              $CONF_PATH/secret-service.env
	sed -i "s|^LOGGING_ES_PASSWORD=.*|LOGGING_ES_PASSWORD=${passwd}|g"  $CONF_PATH/secret-service.env
	sed -i "s|^JWT_SECRET=.*|JWT_SECRET=${jwt_secret}|g"                $CONF_PATH/secret-service.env
fi

# update yaml
kubectl -n ems1 create secret generic secrets-env --from-env-file=$CONF_PATH/secret-service.env --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/secret-env.yaml
kubectl -n ems1 create secret generic es-cert --from-file=$CONF_PATH/es-cert/elastic-certificates.p12 --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/secret-es-cert.yaml
kubectl -n ems1 create secret generic gpg-key --from-file=$CONF_PATH/gpg-key/ --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/secret-gpg-key.yaml
kubectl -n ems1 create secret generic git-ssh-conf --from-file=$CONF_PATH/ssh/ --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/secret-git-ssh-conf.yaml
kubectl -n ems1 create secret generic code-sign-cert --from-file=$CONF_PATH/code-sign/cert/ --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/secret-code-sign-cert.yaml

kubectl -n ems1 create cm publisher-conf --from-file=$CONF_PATH/code-sign/conf/client.toml --dry-run=client -oyaml > $CONF_CHARTS_PATH/charts/cm-publisher-conf.yaml
